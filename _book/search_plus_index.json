{"./":{"url":"./","title":"Introduction","keywords":"","body":"尝试通过GitBook+GitHub搭自己的博客 刚毕业的时候，尝试自己搭过一些博客。回顾一下： 博客的平台尝试了两个 B3log 尝试这个的原因是因为它开源，并且由 java实现，哪时由.NET转java想着多学一些。然后就开发玩了起来，太早，影响不是太深！ 影响中存储图片时不太方便，还需要使用百度BCE插件。 写了一些博文，后面了解到了WordPress，就转WordPress了 WordPress WordPress使用的时间最长，差不多两年多。比较主流的博客平台 ，插件、皮肤等都非常 多，贡献者也比较多。还可以倒腾下PHP~~ 部署方式就比较多了 首先尝试了SAE。 最开始免费，不需要备案就能绑定域名，， 随着收费和备案问题就转了 然后是BAE。 哪时BAE和SAE差不多。 RedHat Cloud。 这个很不错，但是国内访问的速度比较慢，也就慢慢放弃了。 这个平台还有个好玩的，可以其它RedHat提供的SSH连接搭一个免费的翻墙工具。 GAE。谷歌的，很不错，， 但是后来被限制的很严重，GoAgent等很好的应用都没法再使用了。 后面稳定了一段时间。 在阿里购买了最低配置的服务器，通过该服务器把域名备了案。 在上面部署了MySQL+WordPress。 后来换了工作，很忙！！！ 有两个月没维护，没有给服务器续费，然后就没了~~~~ 总的来说自己维护服务器是一件很麻烦的事儿，当然出了学习目的去倒腾一下是很好的，扩大自己的知识面。但是有几个缺点： 收费。 免费的就别想了，功能不稳定，，三天两头就改政策。 维护。要给服务器续费，给域名续费。 忘记续费的，博客的文件都没了。 少操心最好！！！ 最近公司的产品要搭一个在线的帮助文件，了解到了GitBook 这个产品。 了解了下真心不错！ 博客原始的文件可以存储在GitHub上，个人博客本来就是出于分享目的的。 放在GitHub上至少不用担心数据丢失了。 还有一个，程序员对GitHub都抱有天然的好感~~~ GitBook，可以输入Web Site、PDF、epub等格式。 后期的扩展型也好。 编辑方式可以使用，GitHub、GitBookEditor、GitBookOnline。 做一个尝试吧~~~ "},"daily.html":{"url":"daily.html","title":"日常随笔","keywords":"","body":"日常随笔 "},"daily/openvpn.html":{"url":"daily/openvpn.html","title":"OpenVPN安装","keywords":"","body":"OpenVPN安装步骤 15年记录的，有些久！ 其中一些下载链接也无法使用了，仅仅做个记录。 最近在CentOS上部署了，一些问题记录 安装 ubuntu apt-get install openvpn centos yum install openvpn easy-rsa http://swupdate.openvpn.org/community/releases/easy-rsa-2.2.0_master.tar.gz 将easy-rsa解压，将其中2.0目录下的文件拷贝到 /etc/openvpn下。 配置PKI # cd /etc/openvpn/ # vim vars 找到“export KEY_SIZE=”这行，根据情况把1024改成2048或者4096 再定位到最后面，会看到类似下面这样的 export KEY_COUNTRY=”US” export KEY_PROVINCE=”CA” export KEY_CITY=”SanFrancisco” export KEY_ORG=”Fort-Funston” export KEY_EMAIL=” me@myhost.mydomain “ 这个自己根据情况改一下，不改也可以运行。其实不改vars这个文件，vpn也可以跑起来。 例如： export KEY_COUNTRY=”CN” export KEY_PROVINCE=”CD” export KEY_CITY=”Chengdu” export KEY_ORG=”witaction.com” export KEY_EMAIL=”test@witaction.com“ 注：在后面生成服务端ca证书时，这里的配置会作为缺省配置 做SSL配置文件软链： # ln -s openssl-1.0.0.cnf openssl.cnf 修改vars文件可执行并调用 # chmod +x vars 生成证书 3.1、产生CA证书 # source ./vars NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/openvpn/keys 注：也就是如果执行./clean-all，就会清空/etc/openvpn/keys下所有文件 开始配置证书： 清空原有证书 # ./clean-all 注：下面这个命令在第一次安装时可以运行，以后在添加完客户端后慎用，因为这个命令会清除所有已经生成的证书密钥，和上面的提示对应 生成服务器端ca证书 # ./build-ca 注：由于之前做过缺省配置，这里一路回车即可 3.2、产生服务器证书 # ./build-key-server openvpn.example.com 生成服务器端密钥证书, 后面这个openvpn.example.com就是服务器名，也可以自定义，可以随便起，但要记住，后面要用到。 3.3、生成DH验证文件 # ./build-dh 生成diffie hellman参数，用于增强openvpn安全性（生成需要漫长等待），让服务器飞一会。 3.4、生成客户端证书 # ./build-key client1 # ./build-key client2 （名字任意，建议写成你要发给的人的姓名，方便管理） 注：这里与生成服务端证书配置类似，中间一步提示输入服务端密码，其他按照缺省提示一路回车即可。 3.5、生成ta.key文件 # openvpn --genkey --secret /etc/openvpn/keys/ta.key 3.6、编辑服务配置文件 # vim /etc/openvpn/server.conf # 设置用TCP还是UDP协议？ ;proto tcp proto tcp # 这里是重点，必须指定SSL/TLS root certificate (ca), # certificate(cert), and private key (key) # ca文件是服务端和客户端都必须使用的，但不需要ca.key # 服务端和客户端指定各自的.crt和.key # 请注意路径,可以使用以配置文件开始为根的相对路径, # 也可以使用绝对路径 # 请小心存放.key密钥文件 ca keys/ca.crt cert keys/openvpn.example.com.crt key keys/openvpn.example.com.key # This file should be kept secret # 指定Diffie hellman parameters. dh keys/dh1024.pem 定位到tls-auth行，设置如下： tls-auth keys/ta.key 0 # This file is secret，客户諯一会设置成 1 ( tls-auth ta.key 1 ) # 配置VPN使用的网段，OpenVPN会自动提供基于该网段的DHCP服务，但不能和任何一方的局域网段重复，保证唯一 server 10.8.0.0 255.255.255.0 加入以下脚本（这样设置后，就可以连内外网互联了） push \"route 10.8.0.0 255.255.255.0\"push \"redirect-gateway def1 bypass-dhcp bypass-dns\"push \"dhcp-option DNS 8.8.8.8\"push \"dhcp-option DNS 8.8.4.4\" # 日志文件 log /var/log/openvpn/openvpn.log log-append /var/log/openvpn/openvpn.log PS：目录不存在时mkdir 3.7 启动服务 # service openvpn start # vim /etc/sysctl.conf 找到net.ipv4.ip_forward = 0 把0改成1 # sysctl -p 设置iptables（这一条至关重要，通过配置nat将vpn网段IP转发到server内网） # iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE "},"daily/centos7-install-openvpn-server-proplems.html":{"url":"daily/centos7-install-openvpn-server-proplems.html","title":"CentOS7安装OpenVPN Server遇到的一些问题","keywords":"","body":"CentOS7搭建OpenVPN遇到的一些问题 曾经在CentOS 6上搭过OpenVPN，感觉还挺好；最近要在阿里ECS上部署个OpenVPN以便可以访问一些内网资源，ECS为CentOS7 ，遇到一些问题，记录一下。 安装教程 网上一搜一大堆，这是很久以前自己记录的。 着重记录一下之前相比之前遇到的一些新问题: 取代之前的iptables centos 6使用iptables配置转发，网上很多仍然在centos7中装iptables。 但是这里不推荐，CentOS 7中如下： firewall-cmd --permanent --add-service openvpn firewall-cmd --permanent --zone=trusted --add-interface=tun0 firewall-cmd --permanent --zone=trusted --add-masquerade DEV=$(ip route get 8.8.8.8 | awk 'NR==1 {print $(NF-2)}') firewall-cmd --permanent --direct --passthrough ipv4 -t nat -A POSTROUTING -s 10.8.0.0/24 -o $DEV -j MASQUERADE firewall-cmd --reload 参考 ：https://panovski.me/install-and-configure-openvpn-on-a-centos-7/ 服务 systemctl start openvpn@server //服务启动 一开始使用systemctl start openvpn报错了 systemctl status openvpn@server //若服务启动失败，可以查看失败信息 使用udp客户端连接使用 真心不知道为何（其实偷懒了），换成tcp协议就行了。 直接将\"proto udp\"改成\"proto tcp\"后启动报错 [root@iZ23nzm9qhoZ openvpn]# systemctl status openvpn@server ● openvpn@server.service - OpenVPN Robust And Highly Flexible Tunneling Application On server Loaded: loaded (/usr/lib/systemd/system/openvpn@.service; enabled; vendor preset: disabled) Active: failed (Result: exit-code) since Tue 2017-10-31 21:55:00 CST; 2min 29s ago Process: 15682 ExecStart=/usr/sbin/openvpn --cd /etc/openvpn/ --config %i.conf (code=exited, status=1/FAILURE) Main PID: 15682 (code=exited, status=1/FAILURE) Oct 31 21:55:00 iZ23nzm9qhoZ systemd[1]: Starting OpenVPN Robust And Highly Flexible Tunneling Applicat...r... Oct 31 21:55:00 iZ23nzm9qhoZ systemd[1]: openvpn@server.service: main process exited, code=exited, stat...LURE Oct 31 21:55:00 iZ23nzm9qhoZ systemd[1]: Failed to start OpenVPN Robust And Highly Flexible Tunneling A...ver. Oct 31 21:55:00 iZ23nzm9qhoZ systemd[1]: Unit openvpn@server.service entered failed state. Oct 31 21:55:00 iZ23nzm9qhoZ systemd[1]: openvpn@server.service failed. Hint: Some lines were ellipsized, use -l to show in full. 解决方法：将server.conf中的\"explicit-exit-notify 1\"注释。查看了下官方的说法，不推荐使用tcp方式，所以有个开关。 Win10问题 公司机器上部署也连接成功。 ping 10.8.0.1 成功，但是无法访问内网资源。 使用 route print 发现是路由没有 push过来，纠结了很久没有解决（网上说以管理员方式运行，我有哪么傻？ 肯定不行啊）。 晚上回到家后，用家里的win8和win10测试，竟然一路OK，路由也push过来了！！！ 明天回公司再看下吧 路由没push过来的问题解决了。 公司 机器OpenVPN GUI版本过低（openvpn-install-2.3.10-I601-x86_64），升级到openvpn-install-2.4.4-I601(别使用2.3的sample config，换成2.4.4的sample config)就OK了。 附 server.conf port 8089 proto tcp dev tun ca keys/ca.crt cert keys/openvpn.xxx.com.crt key keys/openvpn.xxx.com.key # This file should be kept secret dh keys/dh2048.pem server 10.8.0.0 255.255.255.0 ifconfig-pool-persist ipp.txt push \"route 10.8.0.0 255.255.0.0\" push \"route 100.114.25.139 255.255.255.255\" push \"dhcp-option DNS 8.8.8.8\" #explicit-exit-notify 1 "},"daily/something-about-cross-gw.html":{"url":"daily/something-about-cross-gw.html","title":"关于翻墙","keywords":"","body":"关于翻墙 2017/11/08 一直来翻墙挺少。最开始的是GoAgent，很好用，后来GAE被墙了；用过30块钱一个月的，后来没续费；后面其实直接用Google的一些镜像（经常变），如果下载一些国外的东西其实迅雷也是很好用的。 前 些天在公司搭了一个OpenVPN，加上双十一打折，3年ECS才720块，真心便宜。 然后就买了一个硅谷节点，寻思着搭个OpenVPN来免费翻墙。 在买这节点前，还专门用海外APPStore账号下了一个IOS OpenVPN客户测试手机是否能使用。 最终在该节点上搭了OpenVPN，却发现客户怎么也连不上，爬了一些文，才发现主流的VPN协议包都被 长城防火墙 拦截了。后来尝试了ShadowSocks，发现也不行，，后来试过给搭一个通道，将VPN协议加密再解密（失败了）。 之前用RedHat免费的空间时，曾经用SSH客户端+Socket5通道试过免费翻墙（开始还好，但是后来很不稳定，就放弃了），于是用XShell开了一个Socket5代理，结果可以成功。 注意：Socket5 不能直接建立在海外节点上， 也要被墙。只有先在本地局网通过SSH建立连接后，再使用本地局网的Socket5代理 步骤 第一步建立Socket5通道 如果是本地Windows或PC，通过XShell或Putty之类的SSH工具建立即可。(参见以下设置，最后建立连接即可) 如果在公司，有稳定的局网，找一台linux机器，用下面命令创建Socket5通道。 优点是不用打开XShell，一个局网的人都能使用这个通道。 ssh -qTfnN -D IP:1080 -p 22 user@47.90.63.13 第二步在浏览器中配置Socket5代理。 IE、FireFox都支持Socket 5代理 ，这里推荐使用Chrome + SwitchyOmega 。 SwitchyOmega的前身是Proxy SwitchySharp（现在这个插件在Chrome里经常崩溃），推荐的方式是一般情况下不打开代理 ，访问需要翻墙的资源时，直接点插件将域名加到代理列表中去即可。 好处就是，对于国内的一些资源 ，实在没必要走代理。 SwitchyOmega 网盘地址： http://pan.baidu.com/s/1bpLciQz 密码：6dq9 IOS 需要一个在线可访问的pac文件，http://192.168.0.51/vpn/worker.pac 内容如下 function FindProxyForURL(url, host) { if (isInNet(host, \"192.168.0.0\", \"255.255.0.0\")) return \"DIRECT\"; return \"SOCKS 192.168.0.51:7777\"; } WIFI网络代理，自动模式，填入该URL即可。 "},"gitbook.html":{"url":"gitbook.html","title":"GitBook","keywords":"","body":"GitBookGitBook结构 按我的理解分成的4部分。 1： 存储。 我们程序的一个项目(Project) 有一堆的源代码和其它文件 ，我们需要把这些文件给存储起来。 如果是开源的知识，或可以共享的，我们推荐使用GitHub存储（不用自己去造轮子，总是一件很好的事儿）；如果是公司内部，可以考虑使用SVN或GIT。 使用SVN注意，实验中发现SVN不能使用GitBookEditor编辑，只能通过GitBook CLI构建。 2：编辑器。 我们需要对GitBook的项目文件进行编辑。 如我们新建一篇文章，给文章输入一个标题，插入一些文字和图片。这些操作最好由可视化的编辑器来完成。 如果是本地，可以使用GitBook Editor来编辑；在线可以使用登录到GitBook.com在线操作。 3：构建工具。使用构建工具将GItBook Project输出成我们想要的格式。如一个Web站点，或者是PDF等。 相关参考 官网 https://www.gitbook.com/ 【Gitbook】实用配置及插件介绍 http://blog.csdn.net/zhangjk1993/article/details/50380403 GitBookEditor 7.X百度网盘 链接：http://pan.baidu.com/s/1qXJE7Re密码：9xlx 通过 GitBook 开源框架和 GitHub 私有化部署 Wiki 文档 "},"gitbook/gitbookgitbookeditor.html":{"url":"gitbook/gitbookgitbookeditor.html","title":"实践：  使用GitHub、GitBook、GitBookEditor搭建站点","keywords":"","body":"创建 一个GitHub空项目。 这里项目名取为blog；并通过git工具clone到本地。 安装GitBook构建工具 安装NodeJS. GitBook基于NodeJS构建。 https://nodejs.org/en/download/ 下载并安装之 配置淘宝镜像（主要是国内服务器会快些） npm config set registry https://registry.npm.taobao.org --global npm config set disturl https://npm.taobao.org/dist --global 安装GitBook npm install -g gitbook-cli gitbook -V //安装成功，执行该命令会显示gitbook版本 构建 进入本地的githup项目目录，执行以下命令初使化GitBook项目。 gitbook init 在该目录下新建book.json文件。 该文件是一个配置文件。 可以配置插件、主题等。 具体的可以参照：http://blog.csdn.net/zhangjk1993/article/details/50380403 { \"language\" : \"zh-hans\", \"description\" : \"blog of liuyixin\", \"plugins\": [ \"-search\", \"-lunr\", \"disqus\", \"search-pro\", \"github\" \\], \"links\" : { \"sidebar\" : { \"Home\" : \"http://www.liuyx.net\" } }, \"pluginsConfig\": { \"disqus\": { \"shortName\": \"gitbookuse\" }, \"search-pro\": { \"cutWordLib\": \"nodejieba\", \"defineWord\" : \\[\"Gitbook Use\"\\] }, \"github\": { \"url\": \"https://github.com/yjjqrqqq/blog\" } } } 每次编辑完plugins后，需要执行 gitbook install 执行“gitbook serve”，浏览器中 http://localhost:4000 预览 gitbook serve 使用GitBook Editor编辑 使用GitBookEditor可以可视化地编辑文章。 下载安装 官网下载：http://downloads.editor.gitbook.com/download/windows 百度网盘(7.0.12)： http://pan.baidu.com/s/1b5UTRo 密码：z96d 打开GitBookEditor =>Open=> 选择github目录 接下来就是编辑了， 很Easy。 编辑完成后，可以直接在Editor里将修改同步到GitHub，也可以到目录中通过Git命令同步到GitHub。 发布 可以先在本地预览,http://localhost:4000 gitbook install gitbook serve 执行以下命令构建WebSite，默认目录在 _book中。 然后将这个静态站发布即可。 gitbook build Final： 演示地址：http://blog.liuyx.net GitHub地址：https://github.com/yjjqrqqq/blog "},"gitbook/gitbook-editoryu-dao-de-yi-xie-wen-ti.html":{"url":"gitbook/gitbook-editoryu-dao-de-yi-xie-wen-ti.html","title":"GitBook Editor遇到的一些问题","keywords":"","body":" 7.x版本打开显示MarkDown源码 如何插入同一页面的锚记，页面面内链接。 光标移至标题处，右边会出现锚记图标；输入锚记标识；点击\"Insert Link\"，输入锚记的标识即可。 MarkDown不能关闭？ 现象切换MarkDown中直接写了部分代码，发现预览已经改变了，但是MarkDown视图关闭不了；主界面中也无法再进行编辑 。 原因是 MarkDown中包含了部分GitBook Editor无法编辑的代码。 如“”。 此时就代码到底吧 Git仓库登录时无反应， 可能 的原因是用户名或密码错了，但是这个编辑器Bug有些多， 错误信息展示不出。仔细些！！ 添加文章时中文名错误 Add Article时，若第一次输入中文名，会提示错误 。。 解决方法：1,升级到7.0.12及以后的版本 2、先输入英文，再重命名为中文。 search-pro 手机中输入中文无法查询 输入拼音 人员，结果显示的搜索关键字是\"ren yuan\"；而直接粘贴是可以的，电脑上也是可以的。 "},"personal.html":{"url":"personal.html","title":"Personal","keywords":"","body":""}}